Given a string, you need to remove all the duplicates. 
That means, the output string should contain each character only once. The respective order of characters should remain same.

#include<unordered_map>
char* uniqueChar(char *s){
    // Write your code here
 unordered_map<char,int> exists; 
  int index = 0;  
  for(int i=0;s[i]!='\0';i++)
  { 
    if(exists[s[i]]==0) 
    { 
      s[index++] = s[i]; 
      exists[s[i]]++; 
    } 
  } 
    s[index]='\0';
  return s; 
}

// Another Way

string unique_char(string s) {

    unordered_map<char,int> mp;
    string ans;

    for(int i=0;i<s.length();i++) {
        mp[s[i]]++;
        if(mp[s[i]]==1) ans.push_back(s[i]);
    }

    return ans;
}
